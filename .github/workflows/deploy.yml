name: CI/CD - Build and Deploy Docker Frontend

on:
  push:
    branches:
      - master  # ou main si c'est ta branche principale

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest

    steps:
      # 1. Récupération du code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Build l'image Docker localement sur le runner
      - name: Build Docker image
        run: |
          docker build -t my-portfolio:latest .

      # 4. Optionnel : sauvegarder le Dockerfile (ou l'image si besoin)
      - name: Save Dockerfile as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dockerfile
          path: Dockerfile

  deploy:
    name: Deploy Docker image on server
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 1. Checkout repository sur le runner
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Copier le Dockerfile sur le serveur via SSH
      - name: Copy Dockerfile to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "Dockerfile"
          target: "/home/${{ secrets.SERVER_USER }}/myporfolio"
          rm: true

      # 3. Build et run du container directement sur le serveur
      - name: Build and run Docker container on server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/myporfolio
            # Build l'image Docker sur le serveur
            docker build -t my-portfolio:latest .
            # Stoppe et supprime l'ancien container si existant
            docker stop my-portfolio || true
            docker rm my-portfolio || true
            # Run le nouveau container
            docker run -d -p 80:80 --name my-portfolio my-portfolio:latest
